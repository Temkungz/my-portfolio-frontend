"use client" //‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ hook ‡∏≠‡∏¢‡πà‡∏≤‡∏á useState ‡πÅ‡∏•‡∏∞‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏Ç‡∏∂‡πâ‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏±‡∏ö browser ‡πÑ‡∏î‡πâ
import {useState} from "react"; //‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ state ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô component function ‡∏ã‡∏∂‡πà‡∏á‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ß‡πà‡∏≤‡πÄ‡∏°‡∏ô‡∏π (Menu Links) ‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà
import Link from "next/link"; //Link ‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡πÉ‡∏ô‡πÅ‡∏≠‡∏õ Next.js ‡∏ô‡∏±‡πâ‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ö‡∏ö client-side routing (‡πÑ‡∏°‡πà‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î)
import { motion, spring } from "framer-motion";
import { useCursor } from "../cursor/CursorContext";


export default function Header(){
    const [isOpen, setIsOpen] = useState(false); {/*‚Ä¢isOpen ‡πÄ‡∏õ‡πá‡∏ô state ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á‡πÄ‡∏°‡∏ô‡∏π (‡πÄ‡∏ä‡πà‡∏ô ‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏¥‡∏î)
                                                    ‚Ä¢setIsOpen ‡∏Ñ‡∏∑‡∏≠‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ñ‡πà‡∏≤ state ‡∏ô‡∏µ‡πâ*/}
    const { setActive } = useCursor(); // üü¢ ‡∏î‡∏∂‡∏á context

    return(
        <header className=" fixed top-0 left-0 right-0 bg-white shadow z-50 " >
            <nav className="container mx-auto flex items-center justify-between px-4 py-4">
                <motion.div
                whileHover={{scale: 1.2, paddingLeft: 8, paddingRight: 8}}
                whileTap={{scale: 0.9}}
                transition={{ type:"spring", stiffness: 300}}
                className="cursor-pointer hover:bg-gray-200 transition-colors duration-300  rounded-full text-xl font-bold">
                    <Link href="/">My Portfolio</Link>
                </motion.div>

                {/* block element lg:hidden ‡∏Ñ‡∏∑‡∏≠‡∏ã‡πà‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏î‡πå‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ó‡∏µ‡πà‡∏Ç‡∏ô‡∏≤‡∏î lg (>= 1024px) ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏à‡∏∞‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏Ñ‡πà‡∏≤ isOpen ‡πÄ‡∏õ‡πá‡∏ô true ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡πá‡∏Ñ‡∏∑‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏°‡∏ô‡∏π hamburger */ }
                <button className="block lg:hidden text-black" onClick={()=>setIsOpen(!isOpen)}>

                    {/* w-6 h-6 (1.5rem ‡∏´‡∏£‡∏∑‡∏≠ 24px)‡∏°‡∏µ‡πÑ‡∏ß‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏°‡πá‡∏õ‡∏†‡∏≤‡∏û SVG ‡∏Å‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏à‡∏£‡∏¥‡∏á ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏°‡∏±‡∏ô‡∏à‡∏∞‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û SVG */}
                    {/*stroke="currentColor": ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÉ‡∏´‡πâ‡πÄ‡∏™‡πâ‡∏ô (stroke) ‡πÉ‡∏ä‡πâ‡∏™‡∏µ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö currentColor ‡∏ã‡∏∂‡πà‡∏á‡∏°‡∏±‡∏Å‡∏à‡∏∞‡∏°‡∏≤‡∏à‡∏≤‡∏Å text-black ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÑ‡∏ß‡πâ‡πÉ‡∏ô‡∏õ‡∏∏‡πà‡∏°*/}
                    {/*fill="none"m‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÉ‡∏´‡πâ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏µ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏Ç‡∏≠‡∏á SVG*/}
                    {/* [0 0] 2 ‡∏ï‡∏±‡∏ß‡πÅ‡∏£‡∏Å‡∏Ñ‡∏∑‡∏≠ x y ‡∏ï‡∏≤‡∏°‡∏•‡∏≥‡∏î‡∏±‡∏ö ‡πÅ‡∏•‡∏∞‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà [24 24] ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á ‡∏ï‡∏≤‡∏°‡∏•‡∏≥‡∏î‡∏±‡∏ö */}
                    <svg className=
                        {`w-6 h-6 transition-transform duration-300 ease-in-out active:scale-110`}
                        fill="none"
                        stroke="currentColor" 
                        viewBox="0 0 24 24">
                            
                            {/* strokeLinecap="round": ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÉ‡∏´‡πâ‡∏õ‡∏•‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡πÄ‡∏™‡πâ‡∏ô‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÇ‡∏Ñ‡πâ‡∏á‡∏°‡∏ô ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏î‡∏π‡∏ô‡∏∏‡πà‡∏°‡∏ô‡∏ß‡∏•‡∏Ç‡∏∂‡πâ‡∏ô
	                            strokeLinejoin="round": ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏™‡πâ‡∏ô (‡∏°‡∏∏‡∏°) ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ö‡∏ö‡πÇ‡∏Ñ‡πâ‡∏á‡∏°‡∏ô
	                        	strokeWidth={2}: ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ô‡∏≤‡∏Ç‡∏≠‡∏á‡πÄ‡∏™‡πâ‡∏ô‡πÄ‡∏õ‡πá‡∏ô 2 ‡∏´‡∏ô‡πà‡∏ß‡∏¢*/}
                            {/*	M4 5h16: ‡∏¢‡πâ‡∏≤‡∏¢‡∏õ‡∏≤‡∏Å‡∏Å‡∏≤‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á (4,5) ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏û‡∏¥‡∏Å‡∏±‡∏î (‡∏ã‡∏∂‡πà‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô viewBox ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ç‡∏ô‡∏≤‡∏î 24x24)
                                h16: ‡∏ß‡∏≤‡∏î‡πÄ‡∏™‡πâ‡∏ô‡πÅ‡∏ô‡∏ß‡∏ô‡∏≠‡∏ô‡πÑ‡∏õ‡∏ó‡∏≤‡∏á‡∏Ç‡∏ß‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏∞‡∏¢‡∏∞ 16 ‡∏´‡∏ô‡πà‡∏ß‡∏¢*/}
                            <path strokeLinecap="round"
                                  strokeLinejoin="round"
                                  strokeWidth={2}
                                  d="M4 5h16M4 12h16M4 19h16">
                            </path>             
                    </svg>
                </button>
                
                {/* Menu Links */}
                {/*	‚Ä¢	‡∏ñ‡πâ‡∏≤ isOpen ‡πÄ‡∏õ‡πá‡∏ô true ‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏•‡∏≤‡∏™ "block" (‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ <ul> ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•)
	                ‚Ä¢	‡∏ñ‡πâ‡∏≤ isOpen ‡πÄ‡∏õ‡πá‡∏ô false ‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏•‡∏≤‡∏™ "hidden" (‡∏ã‡πà‡∏≠‡∏ô <ul>)*/}
                <ul className={`${isOpen ? "block" : "hidden" } 
                              absolute lg:static top-16 font-bold right-0 bg-white lg:bg-transparent w-full lg:w-auto lg:flex 
                              space-y-4 lg:space-y-0 lg:space-x-4 p-4 lg:p-0 shadow lg:shadow-none`}>
             <motion.li
                        onMouseEnter={() => setActive(true)}
                        onMouseLeave={() => setActive(false)}
                        whileHover={{ scale: 1.2, paddingLeft: 8, paddingRight: 8 }}
                        whileTap={{ scale: 0.9 }}
                        className="cursor-pointer hover:bg-gray-200 transition-colors duration-300 rounded-full"
                    >
                        <Link href="/" onClick={() => setIsOpen(false)}>Home</Link>
                    </motion.li>
                    <motion.li
                    onMouseEnter={() => setActive(true)}
                    onMouseLeave={() => setActive(false)}
                      whileHover={{scale: 1.2, paddingLeft: 8, paddingRight: 8}}
                      whileTap={{ scale: 0.9 }}
                      transition={{ type: "spring", stiffness: 300 }}
                      className="cursor-pointer hover:bg-gray-200 transition-colors duration-300  rounded-full">
                    <Link href="/about" onClick={() => setIsOpen(false)}>About</Link></motion.li>
                    <motion.li
                    onMouseEnter={() => setActive(true)}
                    onMouseLeave={() => setActive(false)}
                      whileHover={{scale: 1.2, paddingLeft: 8, paddingRight: 8}}
                      whileTap={{scale: 0.9}}
                      transition={{ type:"spring", stiffness: 300}}
                      className="cursor-pointer hover:bg-gray-200 transition-colors duration-300  rounded-full">
                    <Link href="/projects" onClick={() => setIsOpen(false)}>Projects</Link></motion.li>
                    <motion.li
                    onMouseEnter={() => setActive(true)}
                    onMouseLeave={() => setActive(false)}
                     whileHover={{scale: 1.2, paddingLeft: 8, paddingRight: 8}}
                      whileTap={{scale: 0.9}}
                      transition={{ type:"spring", stiffness: 300}}
                      className="cursor-pointer hover:bg-gray-200 transition-colors duration-300  rounded-full ">
                    <Link href="/contact" onClick={() => setIsOpen(false)}>Contact</Link></motion.li>
               
                </ul>
            </nav>
        </header>
    );
}